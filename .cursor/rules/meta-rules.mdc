---
alwaysApply: true
---

# Meta Rules & Self-Reflection

## Maintaining These Rules

When updating rules:

- **Be concise**: Avoid redundancies
- **Simplify**: Make clearer and more direct
- **Add useful patterns**: Welcome new insights
- **Keep actionable**: Clear, practical application
- **REALLY sum it up**: Make significantly shorter when rewriting

## Self-Reflection Protocol

After solving a problem (especially multiple failures):

1. **PAUSE**: What worked differently?
2. **Identify key change**: Structure vs CSS vs different tool?
3. **Share insight**: Help user understand
4. **Update mental model**: Remember pattern

## Problem-Solving

When failing repeatedly:

1. **Stop and reassess**: Don't repeat same approach
2. **Question approach**: Root cause analysis
3. **Look broader**: What's structurally different?
4. **Consider restructuring**: DOM change often beats CSS fight
5. **Test incrementally**: One change at a time

## Creating New Rule Files

When creating new knowledge/findings files in `.cursor/rules/`:

- **Include description**: Add YAML frontmatter with concise description of contents and potential use cases
- **Example format**:
  ```yaml
  ---
  description: 'Brief what/why/when to use this rule'
  alwaysApply: false
  ---
  ```
